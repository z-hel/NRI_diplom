@page
@{

}
<!DOCTYPE html>

<html lang="ru">
<head>
    <meta charset="utf-8" />
    <title>NRI</title>
    <link rel="stylesheet" href="css/main.css" />
    <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no" />
    @*<script src="https://code.jquery.com/jquery-2.2.4.min.js"></script>*@

    <!-- jQuery -->
    <script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
    <!-- Bootstrap -->
    @*<script src="/examples/vendors/bootstrap-3.3.7/js/bootstrap.min.js"></script>*@

    @*<script type="text/javascript" src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js"></script>*@

    <style type="text/css">
        table {
            font-family: "Lucida Sans Unicode", "Lucida Grande", Sans-Serif;
            text-align: left;
            border-collapse: separate;
            border-spacing: 3px;
            background: #337ab7;
            /*color: #656665;*/
            /*color: rgb(162, 212, 255);*/
            /*border: 3px solid #337ab7;*/
            background-color: #337ab7;
            border-radius: 0.375em;
            box-shadow: inset 0 0 0 2px #337ab7;
            color: #337ab7 !important;
        }

        tr {
            background: #ffffff;
            border: 3px solid #337ab7;
        }

        th {
            font-size: 18px;
            padding: 10px;
        }

        td {
            background: #ffffff;
            padding: 10px;
        }

        INPUT {
            margin: 10px 10px 10px 0;
        }

        .table {
        }
    </style>
</head>


<body>
    <INPUT type="button" value="Добавить" data-modal="addModal" />
    <INPUT type="button" value="Редактировать" onclick="openEditModal()" />
    <INPUT type="button" value="Удалить" onclick="openDeleteModal()" />
    <div class="table">
        <table id="modeTable">
            <thead>
                <tr>
                    <th>Режим</th>
                    <th>Время обработки 1 шт. изделия</th>
                    <th>Заключительное время выполнения операции</th>
                    <th>Заключительное время использования ресурса</th>
                    <th>Технологическая операция</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>

    <div id="overlay" class="overlay fadeOut" data-close=""></div>
    <div class="modal-outer" style="top: -460px;">
        <span class="closer" id="closer" data-close=""></span>
        <div id="addModal">
            <form name="modeForm">
                <input type="hidden" name="id" value="0" />
                <div class="form-group">
                    <label for="mode">Режим:</label>
                    <input class="form-control" name="mode" id="mode" />
                </div>
                <div class="form-group">
                    <label for="singleProcessingTime">Время обработки 1 шт. изделия:</label>
                    <input class="form-control" name="singleProcessingTime" id="singleProcessingTime" />
                </div>
                <div class="form-group">
                    <label for="execOperationTime">Заключительное время выполнения операции:</label>
                    <input class="form-control" name="execOperationTime" id="execOperationTime" />
                </div>
                <div class="form-group">
                    <label for="execResourceTime">Заключительное время использования ресурса:</label>
                    <input class="form-control" name="execResourceTime" id="execResourceTime" />
                </div>
                <div class="form-group">
                    <label for="selectTechOperation">Технологическая операция:</label>
                    <select name="selectTechOperation" id="selectTechOperation"></select>
                </div>
                <div class="panel-body">

                    <input type="button" value="Добавить" onclick="AddMode()" />
                    <input type="button" value="Сбросить" onclick="reset('modeForm')" />
                </div>
            </form>
        </div>


        <div id="editModal">
            <form name="modeEditForm">
                <input type="hidden" name="id" value="0" />
                <div class="form-group">
                    <label for="modeEdit">Режим:</label>
                    <input class="form-control" name="modeEdit" id="modeEdit" />
                </div>
                <div class="form-group">
                    <label for="singleProcessingTimeEdit">Время обработки 1 шт. изделия:</label>
                    <input class="form-control" name="singleProcessingTimeEdit" id="singleProcessingTimeEdit" />
                </div>
                <div class="form-group">
                    <label for="execOperationTimeEdit">Заключительное время выполнения операции:</label>
                    <input class="form-control" name="execOperationTimeEdit" id="execOperationTimeEdit" />
                </div>
                <div class="form-group">
                    <label for="execResourceTimeEdit">Заключительное время использования ресурса:</label>
                    <input class="form-control" name="execResourceTimeEdit" id="execResourceTimeEdit" />
                </div>
                <div class="form-group">
                    <label for="selectTechOperationEdit">Технологическая операция:</label>
                    <select name="selectTechOperationEdit" id="selectTechOperationEdit"></select>
                </div>
                <div class="panel-body">

                    <input type="button" value="Изменить" onclick="EditMode()" />
                    @*TODO*@
                    <input type="button" value="Сбросить" onclick="reset('modeEditForm')" />
                </div>
            </form>
        </div>


        <div id="deleteModal">
            <div class="panel-body">
                <h3>Вы уверены, что хотите удалить запись?</h3>
                <input type="button" value="Удалить" onclick="DeleteMode()" />
                <input type="button" value="Отменить" onclick="CloseModal()" />
            </div>
        </div>
    </div>



    <script>
        var selectedCheckbox;
        var selectedForDelete = [];
        var resultForDelete = new Map();

        function EditMode() {
            
            var modeNamePUT = document.getElementById("modeEdit").value;

            var indexTechOperationSelected = document.getElementById("selectTechOperationEdit").options.selectedIndex;
            var techOperationIdPUT = document.getElementById("selectTechOperationEdit").options[indexTechOperationSelected].value;

            var singleProcessingTimePUT = document.getElementById("singleProcessingTimeEdit").value;
            var execOperationTimePUT = document.getElementById("execOperationTimeEdit").value;
            var execResourceTimePUT = document.getElementById("execResourceTimeEdit").value;
            
            var idPUT = selectedCheckbox;

            var urlstr = "api/Mode/" + idPUT;
            $.ajax({
                url: urlstr,
                contentType: "application/json",
                method: "PUT",
                data: JSON.stringify({
                    name: modeNamePUT,
                    techOperationId: techOperationIdPUT,
                    singleProcessingTime: singleProcessingTimePUT,
                    execOperationTime: execOperationTimePUT,
                    execResourceTime: execResourceTimePUT,
                    id: idPUT
                }),
                success: async function (mode) {
                    reset('modeEditForm');
                    alert('Запись успешно изменена');
                    //update table

                    var table = document.getElementById('modeTable');

                    for (var i = 1; i < table.rows.length;) {
                        table.deleteRow(i);
                    }
                    await GetModes();
                    CloseModal();
                },
                error: function (e) {
                    console.log(e.message);
                }
            })
        }

        function openEditModal() {

            $('input[type=checkbox]').each(async function () {
                //if ($(this).is(':checked')) {
                if (this.checked) {
                    selectedCheckbox = this.value;
                    var editModal = document.getElementById('editModal');

                    somebodyShow(editModal);
                    //TODO SHOW EDIT MODAL


                    //editButton.setAttribute('data-modal', 'editModal');
                    //showForEdit(editModal);
                    //modalShow(editModal);
                    //$("#editModal").show();
                    var id = selectedCheckbox;
                    await GetModeById(id);

                    return false;
                }
            });
            if (selectedCheckbox == null) {
                alert('Не выбрана ни одна запись');
            }
            return false;
        }

        // сброс формы
        function reset(formId) {
            var form = document.forms[formId];
            form.reset();
            form.elements["id"].value = 0;
        }


        function CloseModal() {
            var closer = document.getElementById('closer');
            closer.click();
        }


        function openDeleteModal() {
            selectedForDelete = [];

            $('input[type=checkbox]').each(function () {
                if (this.checked) {
                    selectedForDelete.push(this.value)
                }
            });


            if (selectedForDelete.length == 0) {
                alert('Не выбрана ни одна запись');
                return false;
            }


            var deleteModal = document.getElementById('deleteModal');
            //TODO SHOW DELETE MODAL
            somebodyShow(deleteModal);

            return false;
        }

        async function DeleteMode() {
            selectedForDelete.forEach(async function (elem) {
                await GetModeById(elem);
                var idDEL = elem;
                var modeNameDEL = resultForDelete.get('modeName');
                var techOperationIdDEL = resultForDelete.get('techOperationId');
                var singleProcessingTimeDEL = resultForDelete.get('singleProcessingTime');
                var execOperationTimeDEL = resultForDelete.get('execOperationTime');
                var execResourceTimeDEL = resultForDelete.get('execResourceTime');

                var urlstr = "api/Mode/" + idDEL;
                $.ajax({
                    url: urlstr,
                    contentType: "application/json",
                    method: "DELETE",
                    data: JSON.stringify({
                        name: modeNameDEL,
                        techOperationId: techOperationIdDEL,
                        singleProcessingTime: singleProcessingTimeDEL,
                        execOperationTime: execOperationTimeDEL,
                        execResourceTime: execResourceTimeDEL,
                        id: idDEL
                    }),
                    success: async function (mode) {
                        alert('Запись удалена');
                        
                        var table = document.getElementById('modeTable');

                        for (var i = 1; i < table.rows.length;) {
                            table.deleteRow(i);
                        }
                        await GetModes();
                        CloseModal();
                    },
                    error: function (e) {
                        console.log(e.message);
                    }
                });
            })
            //alert('Запись удалена');
            //CloseModal();
            //if (res) {
            //    alert('Запись удалена');

            //    var table = document.getElementById('modeTable');

            //    for (var i = 1; i < table.rows.length;) {
            //        table.deleteRow(i);
            //    }
            //    await GetModes();
            //    CloseModal();
            //}



        }


        async function GetModeById(id) {
            var urlstr = "api/Mode/" + id;
            await $.ajax({
                url: urlstr,
                type: 'GET',
                contentType: "application/json",
                success: async function (mode) {
                    var previousTO = document.getElementById('modeEdit');
                    previousTO.value = mode.name;

                    var previousTechOperation = document.getElementById('selectTechOperationEdit');
                    previousTechOperation.value = mode.techOperationId;

                    var previousSingleProcessingTime = document.getElementById('singleProcessingTimeEdit');
                    previousSingleProcessingTime.value = mode.singleProcessingTime;

                    var previousExecOperationTime = document.getElementById('execOperationTimeEdit');
                    previousExecOperationTime.value = mode.execOperationTime;

                    var previousExecResourceTime = document.getElementById('execResourceTimeEdit');
                    previousExecResourceTime.value = mode.execResourceTime;

                    resultForDelete.set('modeName', mode.name);
                    resultForDelete.set('techOperationId', mode.TechOperationId);
                    resultForDelete.set('singleProcessingTime', mode.singleProcessingTime);
                    resultForDelete.set('execOperationTime', mode.execOperationTime);
                    resultForDelete.set('execResourceTime', mode.execResourceTime);
                },
                error: function (e) {
                    console.log(e.message);
                }
            });
        }

        function GetTechOperationes() {
            var select = document.getElementById('selectTechOperation');
            var selectEdit = document.getElementById('selectTechOperationEdit');
            $.ajax({
                url: '/api/TechOperation',
                type: 'GET',
                contentType: "application/json",
                success: function (techOperationes) {
                    $.each(techOperationes, function (index, techOperation) {
                        var ooption = document.createElement('option');
                        ooption.value = techOperation.id;
                        ooption.innerText = techOperation.name
                        select.appendChild(ooption);

                        var ooptionEdit = document.createElement('option');
                        ooptionEdit.value = techOperation.id;
                        ooptionEdit.innerText = techOperation.name
                        selectEdit.appendChild(ooptionEdit);
                    })
                },
                error: function (e) {
                    console.log(e.message);
                }
            });
        }
        


        function AddMode() {
            var modeName = document.getElementById("mode").value;

            var indexTechOperationSelected = document.getElementById("selectTechOperation").options.selectedIndex;
            var techOperationId = document.getElementById("selectTechOperation").options[indexTechOperationSelected].value;

            var singleProcessingTime = document.getElementById("singleProcessingTime").value;
            var execOperationTime = document.getElementById("execOperationTime").value;
            var execResourceTime = document.getElementById("execResourceTime").value;


            $.ajax({
                url: "api/Mode",
                contentType: "application/json",
                method: "POST",
                data: JSON.stringify({
                    name: modeName,
                    techOperationId: techOperationId,
                    singleProcessingTime: singleProcessingTime,
                    execOperationTime: execOperationTime,
                    execResourceTime: execResourceTime
                }),
                success: function (mode) {
                    reset('modeForm');
                    alert('Запись успешно добавлена');
                    addRow('modeTable', mode);
                }
            })
        }


        // Получение всех mode
        function GetModes() {
            $.ajax({
                url: '/api/Mode',
                type: 'GET',
                contentType: "application/json",
                success: function (modes) {

                    $.each(modes, function (index, mode) {
                        var transactionList = mode;

                        addRow("modeTable", transactionList);
                    })
                },
                error: function (e) {
                    console.log(e.message);
                }
            });
        }

        async function GetTechOperationName(id) {
            var name;
            var urlstr = '/api/TechOperation/' + id;
            await $.ajax({
                url: urlstr,
                type: 'GET',
                contentType: "application/json",
                success: function (techOperation) {
                    name = techOperation.name;
                },
                error: function (e) {
                    console.log(e.message);
                }
            });
            return name;
        }

        async function addRow(tableID, data) {

            var table = document.getElementById(tableID);

            var rowCount = table.rows.length;
            var row = table.insertRow(rowCount);
            
            var modeName = data.name;

            var techOperationId = data.techOperationId;
            var techOperationName = await GetTechOperationName(techOperationId);

            var cell1 = row.insertCell(0);
            cell1.innerText = modeName;

            var cell2 = row.insertCell(1);
            cell2.innerText = data.singleProcessingTime;

            var cell3 = row.insertCell(2);
            cell3.innerText = data.execOperationTime;

            var cell4 = row.insertCell(3);
            cell4.innerText = data.execResourceTime;

            var cell5 = row.insertCell(4);
            cell5.innerText = techOperationName;

            var cell6 = row.insertCell(5);
            //var el = document.createElement('label');
            //cell4.innerHTML = '<input type="checkbox" class="cbx" value="' + data.id + '" id="checkbox' + data.id + '" style="display: none;"><label for="checkbox' + data.id + '" class="check"><svg width="18px" height="18px" viewBox="0 0 18 18"><path d="M1,9 L1,3.5 C1,2 2,1 3.5,1 L14.5,1 C16,1 17,2 17,3.5 L17,14.5 C17,16 16,17 14.5,17 L3.5,17 C2,17 1,16 1,14.5 L1,9 Z"></path><polyline points="1 9 7 14 15 4"></polyline></svg></label>';
            //el.innerHTML = '<input type="checkbox" id="checkbox" value="' + data.id + '" id="cbx" style="display: block;">';
            cell6.innerHTML = '<input type="checkbox" value="' + data.id + '" id="checkbox' + data.id + '"/><label for="checkbox' + data.id + '"></label>';
            //cell4.appendChild(el);
        }
        GetModes();
        GetTechOperationes();






        var overlay = document.getElementById('overlay'),
            mOpen = document.querySelectorAll('[data-modal]'),
            mClose = document.querySelectorAll('[data-close]'),
            outer = document.querySelector('.modal-outer'),
            modals = document.querySelectorAll('.modal-outer > div'),
            duration = 400,
            mStatus = false,
            h = null;



        setTopOuter();

        function setTopOuter() {
            outer.style.top = -outer.offsetHeight + 'px';
        }


        function somebodyShow(modal) {

            mStatus = true;
            overlay.classList.remove('fadeOut');
            overlay.classList.add('fadeIn');
            modal.style.display = 'block';

            var start = new Date().getTime(),
                startTop = outer.getBoundingClientRect().top,
                finalTop = (window.innerHeight - outer.offsetHeight) / 2,
                offset = outer.offsetHeight + finalTop;

            var fn = function () {
                var now = new Date().getTime() - start,
                    currTop = Math.round(startTop + offset * now / duration);

                currTop = (currTop > finalTop) ? finalTop : currTop;
                outer.style.top = currTop + 'px';

                if (currTop < finalTop) {
                    requestAnimationFrame(fn);
                }
            }
            requestAnimationFrame(fn);
            window.addEventListener('resize', setTopOpenOuter);
        }

        function setTopOpenOuter() {
            outer.style.top = (window.innerHeight - outer.offsetHeight) / 2 + 'px';
        }

        (function () {
            if (mOpen.length == 0) return;
            [].forEach.call(mOpen, function (el) {
                el.addEventListener('click', function (e) {
                    var modalId = el.getAttribute('data-modal'),
                        modal = document.getElementById(modalId);
                    somebodyShow(modal);
                });
            });
        }());


        [].forEach.call(mClose, function (el) {
            el.addEventListener('click', modalClose);
        });

        document.addEventListener('keydown', modalClose);


        function modalClose(event) {
            if (mStatus && (!event.keyCode || event.keyCode === 27)) {
                mStatus = false;

                var start = new Date().getTime(),
                    startTop = outer.getBoundingClientRect().top,
                    finalTop = -outer.offsetHeight,
                    offset = outer.offsetHeight + (window.innerHeight - outer.offsetHeight) / 2;

                var fn = function () {
                    var now = new Date().getTime() - start,
                        currTop = Math.round(startTop - offset * now / duration);

                    currTop = (currTop < finalTop) ? finalTop : currTop;
                    outer.style.top = currTop + 'px';

                    if (currTop > finalTop) {
                        requestAnimationFrame(fn);
                    } else {
                        overlay.classList.remove('fadeIn');
                        overlay.classList.add('fadeOut');
                        [].forEach.call(modals, function (modal) {
                            modal.removeAttribute('style');
                        });
                    }
                }
                requestAnimationFrame(fn);
                window.removeEventListener('resize', setTopOpenOuter);
            }
        }



        ; (function () {
            var overlay = document.getElementById('overlay'),
                mOpen = document.querySelectorAll('[data-modal]'),
                mClose = document.querySelectorAll('[data-close]'),
                outer = document.querySelector('.modal-outer'),
                modals = document.querySelectorAll('.modal-outer > div'),
                duration = 400,
                mStatus = false,
                h = null;

            if (mOpen.length == 0) return;

            setTopOuter();

            function setTopOuter() {
                outer.style.top = -outer.offsetHeight + 'px';
            }

            [].forEach.call(mOpen, function (el) {
                el.addEventListener('click', function (e) {
                    var modalId = el.getAttribute('data-modal'),
                        modal = document.getElementById(modalId);
                    modalShow(modal);
                });
            });

            [].forEach.call(mClose, function (el) {
                el.addEventListener('click', modalClose);
            });

            document.addEventListener('keydown', modalClose);

            function modalShow(modal) {
                mStatus = true;
                overlay.classList.remove('fadeOut');
                overlay.classList.add('fadeIn');
                modal.style.display = 'block';

                var start = new Date().getTime(),
                    startTop = outer.getBoundingClientRect().top,
                    finalTop = (window.innerHeight - outer.offsetHeight) / 2,
                    offset = outer.offsetHeight + finalTop;

                var fn = function () {
                    var now = new Date().getTime() - start,
                        currTop = Math.round(startTop + offset * now / duration);

                    currTop = (currTop > finalTop) ? finalTop : currTop;
                    outer.style.top = currTop + 'px';

                    if (currTop < finalTop) {
                        requestAnimationFrame(fn);
                    }
                }
                requestAnimationFrame(fn);
                window.addEventListener('resize', setTopOpenOuter);
            }

            function modalClose(event) {
                if (mStatus && (!event.keyCode || event.keyCode === 27)) {
                    mStatus = false;

                    var start = new Date().getTime(),
                        startTop = outer.getBoundingClientRect().top,
                        finalTop = -outer.offsetHeight,
                        offset = outer.offsetHeight + (window.innerHeight - outer.offsetHeight) / 2;

                    var fn = function () {
                        var now = new Date().getTime() - start,
                            currTop = Math.round(startTop - offset * now / duration);

                        currTop = (currTop < finalTop) ? finalTop : currTop;
                        outer.style.top = currTop + 'px';

                        if (currTop > finalTop) {
                            requestAnimationFrame(fn);
                        } else {
                            overlay.classList.remove('fadeIn');
                            overlay.classList.add('fadeOut');
                            [].forEach.call(modals, function (modal) {
                                modal.removeAttribute('style');
                            });
                        }
                    }
                    requestAnimationFrame(fn);
                    window.removeEventListener('resize', setTopOpenOuter);
                }
            }

            function setTopOpenOuter() {
                outer.style.top = (window.innerHeight - outer.offsetHeight) / 2 + 'px';
            }
        })();

    </script>

    <script>var typeAnimate = 'slide';</script>
    @*<script>
            ; (function () {
                var overlay = document.getElementById('overlay'),
                    mOpen = document.querySelectorAll('[data-modal]'),
                    mClose = document.querySelectorAll('[data-close]'),
                    outer = document.querySelector('.modal-outer'),
                    modals = document.querySelectorAll('.modal-outer > div'),
                    duration = 400,
                    mStatus = false,
                    h = null;

                if (mOpen.length == 0) return;

                setTopOuter();

                function setTopOuter() {
                    outer.style.top = -outer.offsetHeight + 'px';
                }

                [].forEach.call(mOpen, function (el) {
                    el.addEventListener('click', function (e) {
                        var modalId = el.getAttribute('data-modal'),
                            modal = document.getElementById(modalId);
                        modalShow(modal);
                    });
                });

                [].forEach.call(mClose, function (el) {
                    el.addEventListener('click', modalClose);
                });

                document.addEventListener('keydown', modalClose);

                function modalShow(modal) {
                    mStatus = true;
                    overlay.classList.remove('fadeOut');
                    overlay.classList.add('fadeIn');
                    modal.style.display = 'block';

                    var start = new Date().getTime(),
                        startTop = outer.getBoundingClientRect().top,
                        finalTop = (window.innerHeight - outer.offsetHeight) / 2,
                        offset = outer.offsetHeight + finalTop;

                    var fn = function () {
                        var now = new Date().getTime() - start,
                            currTop = Math.round(startTop + offset * now / duration);

                        currTop = (currTop > finalTop) ? finalTop : currTop;
                        outer.style.top = currTop + 'px';

                        if (currTop < finalTop) {
                            requestAnimationFrame(fn);
                        }
                    }
                    requestAnimationFrame(fn);
                    window.addEventListener('resize', setTopOpenOuter);
                }

                function modalClose(event) {
                    if (mStatus && (!event.keyCode || event.keyCode === 27)) {
                        mStatus = false;

                        var start = new Date().getTime(),
                            startTop = outer.getBoundingClientRect().top,
                            finalTop = -outer.offsetHeight,
                            offset = outer.offsetHeight + (window.innerHeight - outer.offsetHeight) / 2;

                        var fn = function () {
                            var now = new Date().getTime() - start,
                                currTop = Math.round(startTop - offset * now / duration);

                            currTop = (currTop < finalTop) ? finalTop : currTop;
                            outer.style.top = currTop + 'px';

                            if (currTop > finalTop) {
                                requestAnimationFrame(fn);
                            } else {
                                overlay.classList.remove('fadeIn');
                                overlay.classList.add('fadeOut');
                                [].forEach.call(modals, function (modal) {
                                    modal.removeAttribute('style');
                                });
                            }
                        }
                        requestAnimationFrame(fn);
                        window.removeEventListener('resize', setTopOpenOuter);
                    }
                }

                function setTopOpenOuter() {
                    outer.style.top = (window.innerHeight - outer.offsetHeight) / 2 + 'px';
                }
            })();

        </script>*@
</body>


</html>
