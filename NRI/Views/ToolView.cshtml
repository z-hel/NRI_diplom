@page
@{

}
<!DOCTYPE html>

<html lang="ru">
<head>
    <meta charset="utf-8" />
    <title>NRI</title>
    <link rel="stylesheet" href="css/main.css" />
    <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no" />
    @*<script src="https://code.jquery.com/jquery-2.2.4.min.js"></script>*@

    <!-- jQuery -->
    <script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
    <!-- Bootstrap -->
    @*<script src="/examples/vendors/bootstrap-3.3.7/js/bootstrap.min.js"></script>*@

    @*<script type="text/javascript" src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js"></script>*@

    <style type="text/css">
        /*table {
            font-family: "Lucida Sans Unicode", "Lucida Grande", Sans-Serif;
            text-align: left;
            border-collapse: separate;
            border-spacing: 3px;
            background: #337ab7;
            background-color: #337ab7;
            border-radius: 0.375em;
            box-shadow: inset 0 0 0 2px #337ab7;
            color: #337ab7 !important;
        }

        tr {
            background: #ffffff;
            border: 3px solid #337ab7;
        }

        th {
            font-size: 18px;
            padding: 10px;
        }

        td {
            background: #ffffff;
            padding: 10px;
        }*/
        #Tool {
            color: #337ab7;
        }


        INPUT {
            margin: 10px 10px 10px 0;
        }

        .table {
        }
    </style>
</head>


<body>
    <INPUT type="button" value="Добавить" data-modal="addModal" />
    <INPUT type="button" value="Редактировать" onclick="openEditModal()" />
    <INPUT type="button" value="Удалить" onclick="openDeleteModal()" />
    <div class="table">
        <table id="toolTable">
            <thead>
                <tr>
                    <th>Инструмент</th>
                    <th>Износ</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>

    <div id="overlay" class="overlay fadeOut" data-close=""></div>
    <div class="modal-outer" style="top: -460px;">
        <span class="closer" id="closer" data-close=""></span>
        <div id="addModal">
            <form name="toolForm">
                <input type="hidden" name="id" value="0" />
                <div class="form-group">
                    <label for="name">Инструмент:</label>
                    <input class="form-control" name="name" id="name" />
                </div>
                <div class="form-group">
                    <label for="wearCount">Износ:</label>
                    <input class="form-control" name="wearCount" id="wearCount" />
                </div>
                <div class="panel-body">

                    <input type="button" value="Добавить" onclick="AddTool()" />
                    <input type="button" value="Сбросить" onclick="reset('toolForm')" />
                </div>
            </form>
        </div>


        <div id="editModal">
            <form name="toolEditForm">
                <input type="hidden" name="id" value="0" />
                <div class="form-group">
                    <label for="nameEdit">Инструмент:</label>
                    <input class="form-control" name="nameEdit" id="nameEdit" />
                </div>
                <div class="form-group">
                    <label for="wearCountEdit">Износ:</label>
                    <input class="form-control" name="wearCountEdit" id="wearCountEdit" />
                </div>
                <div class="panel-body">

                    <input type="button" value="Изменить" onclick="EditTool()" />
                    @*TODO*@
                    <input type="button" value="Сбросить" onclick="reset('toolEditForm')" />
                </div>
            </form>
        </div>


        <div id="deleteModal">
            <div class="panel-body">
                <h3>Вы уверены, что хотите удалить запись?</h3>
                <input type="button" value="Удалить" onclick="DeleteTool()" />
                <input type="button" value="Отменить" onclick="CloseModal()" />
            </div>
        </div>
    </div>



    <script>
        var selectedCheckbox;
        var selectedForDelete = [];
        var resultForDelete = new Map();

        function EditTool() {
            var namePUT = document.getElementById("nameEdit").value;
            var wearCountPUT = document.getElementById("wearCountEdit").value;
            if (wearCountPUT.match(/^[-\+]?\d+/) === null) { alert('Укажите корректное числовое значение параметра "Износ"'); }

            var idPUT = selectedCheckbox;

            var urlstr = "api/Tool/" + idPUT;
            $.ajax({
                url: urlstr,
                contentType: "application/json",
                method: "PUT",
                data: JSON.stringify({
                    name: namePUT,
                    wearCount: wearCountPUT,
                    id: idPUT
                }),
                success: async function (tool) {
                    reset('toolEditForm');
                    alert('Запись успешно изменена');
                    //update table

                    var table = document.getElementById('toolTable');

                    for (var i = 1; i < table.rows.length;) {
                        table.deleteRow(i);
                    }
                    await GetTools();
                    CloseModal();
                },
                error: function (e) {
                    console.log(e.message);
                }
            })
        }

        function openEditModal() {

            $('input[type=checkbox]').each(async function () {
                //if ($(this).is(':checked')) {
                if (this.checked) {
                    selectedCheckbox = this.value;
                    var editModal = document.getElementById('editModal');

                    somebodyShow(editModal);
                    //TODO SHOW EDIT MODAL


                    //editButton.setAttribute('data-modal', 'editModal');
                    //showForEdit(editModal);
                    //modalShow(editModal);
                    //$("#editModal").show();
                    var id = selectedCheckbox;
                    await GetToolById(id);

                    return false;
                }
            });
            if (selectedCheckbox == null) {
                alert('Не выбрана ни одна запись');
            }
            return false;
        }

        // сброс формы
        function reset(formId) {
            var form = document.forms[formId];
            form.reset();
            form.elements["id"].value = 0;
        }


        function CloseModal() {
            var closer = document.getElementById('closer');
            closer.click();
        }


        function openDeleteModal() {
            selectedForDelete = [];

            $('input[type=checkbox]').each(function () {
                if (this.checked) {
                    selectedForDelete.push(this.value)
                }
            });


            if (selectedForDelete.length == 0) {
                alert('Не выбрана ни одна запись');
                return false;
            }


            var deleteModal = document.getElementById('deleteModal');
            //TODO SHOW DELETE MODAL
            somebodyShow(deleteModal);

            return false;
        }

        async function DeleteTool() {
            selectedForDelete.forEach(async function (elem) {
                await GetToolById(elem);
                var idDEL = elem;
                var nameDEL = resultForDelete.get('name');
                var wearCountDEL = resultForDelete.get('wearCount');

                var urlstr = "api/Tool/" + idDEL;
                $.ajax({
                    url: urlstr,
                    contentType: "application/json",
                    method: "DELETE",
                    data: JSON.stringify({
                        name: nameDEL,
                        wearCount: wearCountDEL,
                        id: idDEL
                    }),
                    success: async function (tool) {
                        alert('Запись удалена');
                        
                        var table = document.getElementById('toolTable');

                        for (var i = 1; i < table.rows.length;) {
                            table.deleteRow(i);
                        }
                        await GetTools();
                        CloseModal();
                    },
                    error: function (e) {
                        console.log(e.message);
                    }
                });
            })
            //alert('Запись удалена');
            //CloseModal();
            //if (res) {
            //    alert('Запись удалена');

            //    var table = document.getElementById('toolTable');

            //    for (var i = 1; i < table.rows.length;) {
            //        table.deleteRow(i);
            //    }
            //    await GetTools();
            //    CloseModal();
            //}



        }


        async function GetToolById(id) {
            var urlstr = "api/Tool/" + id;
            await $.ajax({
                url: urlstr,
                type: 'GET',
                contentType: "application/json",
                success: async function (tool) {
                    var name = document.getElementById('nameEdit');
                    name.value = tool.name;

                    var wearCount = document.getElementById('wearCountEdit');
                    wearCount.value = tool.wearCount;
                    
                    resultForDelete.set('name', tool.name);
                    resultForDelete.set('wearCount', tool.wearCount);
                },
                error: function (e) {
                    console.log(e.message);
                }
            });
        }

        function AddTool() {
            var name = document.getElementById("name").value;
            var wearCount = document.getElementById("wearCount").value;
            if (wearCount.match(/^[-\+]?\d+/) === null) { alert('Укажите корректное числовое значение параметра "Износ"'); }

            $.ajax({
                url: "api/Tool",
                contentType: "application/json",
                method: "POST",
                data: JSON.stringify({
                    name: name,
                    wearCount: wearCount
                }),
                success: function (tool) {
                    reset('toolForm');
                    alert('Запись успешно добавлена');
                    addRow('toolTable', tool);
                }
            })
        }


        // Получение всех tool
        function GetTools() {
            $.ajax({
                url: '/api/Tool',
                type: 'GET',
                contentType: "application/json",
                success: function (tools) {

                    $.each(tools, function (index, tool) {
                        var transactionList = tool;

                        addRow("toolTable", transactionList);
                    })
                },
                error: function (e) {
                    console.log(e.message);
                }
            });
        }

        async function addRow(tableID, data) {

            var table = document.getElementById(tableID);

            var rowCount = table.rows.length;
            var row = table.insertRow(rowCount);
            

            var cell1 = row.insertCell(0);
            cell1.innerText = data.name;

            var cell2 = row.insertCell(1);
            cell2.innerText = data.wearCount;
            
            var cell3 = row.insertCell(2);
            //var el = document.createElement('label');
            //cell4.innerHTML = '<input type="checkbox" class="cbx" value="' + data.id + '" id="checkbox' + data.id + '" style="display: none;"><label for="checkbox' + data.id + '" class="check"><svg width="18px" height="18px" viewBox="0 0 18 18"><path d="M1,9 L1,3.5 C1,2 2,1 3.5,1 L14.5,1 C16,1 17,2 17,3.5 L17,14.5 C17,16 16,17 14.5,17 L3.5,17 C2,17 1,16 1,14.5 L1,9 Z"></path><polyline points="1 9 7 14 15 4"></polyline></svg></label>';
            //el.innerHTML = '<input type="checkbox" id="checkbox" value="' + data.id + '" id="cbx" style="display: block;">';
            cell3.innerHTML = '<input type="checkbox" value="' + data.id + '" id="checkbox' + data.id + '"/><label for="checkbox' + data.id + '"></label>';
            //cell4.appendChild(el);
        }
        GetTools();






        var overlay = document.getElementById('overlay'),
            mOpen = document.querySelectorAll('[data-modal]'),
            mClose = document.querySelectorAll('[data-close]'),
            outer = document.querySelector('.modal-outer'),
            modals = document.querySelectorAll('.modal-outer > div'),
            duration = 400,
            mStatus = false,
            h = null;



        setTopOuter();

        function setTopOuter() {
            outer.style.top = -outer.offsetHeight + 'px';
        }


        function somebodyShow(modal) {

            mStatus = true;
            overlay.classList.remove('fadeOut');
            overlay.classList.add('fadeIn');
            modal.style.display = 'block';

            var start = new Date().getTime(),
                startTop = outer.getBoundingClientRect().top,
                finalTop = (window.innerHeight - outer.offsetHeight) / 2,
                offset = outer.offsetHeight + finalTop;

            var fn = function () {
                var now = new Date().getTime() - start,
                    currTop = Math.round(startTop + offset * now / duration);

                currTop = (currTop > finalTop) ? finalTop : currTop;
                outer.style.top = currTop + 'px';

                if (currTop < finalTop) {
                    requestAnimationFrame(fn);
                }
            }
            requestAnimationFrame(fn);
            window.addEventListener('resize', setTopOpenOuter);
        }

        function setTopOpenOuter() {
            outer.style.top = (window.innerHeight - outer.offsetHeight) / 2 + 'px';
        }

        (function () {
            if (mOpen.length == 0) return;
            [].forEach.call(mOpen, function (el) {
                el.addEventListener('click', function (e) {
                    var modalId = el.getAttribute('data-modal'),
                        modal = document.getElementById(modalId);
                    somebodyShow(modal);
                });
            });
        }());


        [].forEach.call(mClose, function (el) {
            el.addEventListener('click', modalClose);
        });

        document.addEventListener('keydown', modalClose);


        function modalClose(event) {
            if (mStatus && (!event.keyCode || event.keyCode === 27)) {
                mStatus = false;

                var start = new Date().getTime(),
                    startTop = outer.getBoundingClientRect().top,
                    finalTop = -outer.offsetHeight,
                    offset = outer.offsetHeight + (window.innerHeight - outer.offsetHeight) / 2;

                var fn = function () {
                    var now = new Date().getTime() - start,
                        currTop = Math.round(startTop - offset * now / duration);

                    currTop = (currTop < finalTop) ? finalTop : currTop;
                    outer.style.top = currTop + 'px';

                    if (currTop > finalTop) {
                        requestAnimationFrame(fn);
                    } else {
                        overlay.classList.remove('fadeIn');
                        overlay.classList.add('fadeOut');
                        [].forEach.call(modals, function (modal) {
                            modal.removeAttribute('style');
                        });
                    }
                }
                requestAnimationFrame(fn);
                window.removeEventListener('resize', setTopOpenOuter);
            }
        }



        ; (function () {
            var overlay = document.getElementById('overlay'),
                mOpen = document.querySelectorAll('[data-modal]'),
                mClose = document.querySelectorAll('[data-close]'),
                outer = document.querySelector('.modal-outer'),
                modals = document.querySelectorAll('.modal-outer > div'),
                duration = 400,
                mStatus = false,
                h = null;

            if (mOpen.length == 0) return;

            setTopOuter();

            function setTopOuter() {
                outer.style.top = -outer.offsetHeight + 'px';
            }

            [].forEach.call(mOpen, function (el) {
                el.addEventListener('click', function (e) {
                    var modalId = el.getAttribute('data-modal'),
                        modal = document.getElementById(modalId);
                    modalShow(modal);
                });
            });

            [].forEach.call(mClose, function (el) {
                el.addEventListener('click', modalClose);
            });

            document.addEventListener('keydown', modalClose);

            function modalShow(modal) {
                mStatus = true;
                overlay.classList.remove('fadeOut');
                overlay.classList.add('fadeIn');
                modal.style.display = 'block';

                var start = new Date().getTime(),
                    startTop = outer.getBoundingClientRect().top,
                    finalTop = (window.innerHeight - outer.offsetHeight) / 2,
                    offset = outer.offsetHeight + finalTop;

                var fn = function () {
                    var now = new Date().getTime() - start,
                        currTop = Math.round(startTop + offset * now / duration);

                    currTop = (currTop > finalTop) ? finalTop : currTop;
                    outer.style.top = currTop + 'px';

                    if (currTop < finalTop) {
                        requestAnimationFrame(fn);
                    }
                }
                requestAnimationFrame(fn);
                window.addEventListener('resize', setTopOpenOuter);
            }

            function modalClose(event) {
                if (mStatus && (!event.keyCode || event.keyCode === 27)) {
                    mStatus = false;

                    var start = new Date().getTime(),
                        startTop = outer.getBoundingClientRect().top,
                        finalTop = -outer.offsetHeight,
                        offset = outer.offsetHeight + (window.innerHeight - outer.offsetHeight) / 2;

                    var fn = function () {
                        var now = new Date().getTime() - start,
                            currTop = Math.round(startTop - offset * now / duration);

                        currTop = (currTop < finalTop) ? finalTop : currTop;
                        outer.style.top = currTop + 'px';

                        if (currTop > finalTop) {
                            requestAnimationFrame(fn);
                        } else {
                            overlay.classList.remove('fadeIn');
                            overlay.classList.add('fadeOut');
                            [].forEach.call(modals, function (modal) {
                                modal.removeAttribute('style');
                            });
                        }
                    }
                    requestAnimationFrame(fn);
                    window.removeEventListener('resize', setTopOpenOuter);
                }
            }

            function setTopOpenOuter() {
                outer.style.top = (window.innerHeight - outer.offsetHeight) / 2 + 'px';
            }
        })();

    </script>

    <script>var typeAnimate = 'slide';</script>
    @*<script>
            ; (function () {
                var overlay = document.getElementById('overlay'),
                    mOpen = document.querySelectorAll('[data-modal]'),
                    mClose = document.querySelectorAll('[data-close]'),
                    outer = document.querySelector('.modal-outer'),
                    modals = document.querySelectorAll('.modal-outer > div'),
                    duration = 400,
                    mStatus = false,
                    h = null;

                if (mOpen.length == 0) return;

                setTopOuter();

                function setTopOuter() {
                    outer.style.top = -outer.offsetHeight + 'px';
                }

                [].forEach.call(mOpen, function (el) {
                    el.addEventListener('click', function (e) {
                        var modalId = el.getAttribute('data-modal'),
                            modal = document.getElementById(modalId);
                        modalShow(modal);
                    });
                });

                [].forEach.call(mClose, function (el) {
                    el.addEventListener('click', modalClose);
                });

                document.addEventListener('keydown', modalClose);

                function modalShow(modal) {
                    mStatus = true;
                    overlay.classList.remove('fadeOut');
                    overlay.classList.add('fadeIn');
                    modal.style.display = 'block';

                    var start = new Date().getTime(),
                        startTop = outer.getBoundingClientRect().top,
                        finalTop = (window.innerHeight - outer.offsetHeight) / 2,
                        offset = outer.offsetHeight + finalTop;

                    var fn = function () {
                        var now = new Date().getTime() - start,
                            currTop = Math.round(startTop + offset * now / duration);

                        currTop = (currTop > finalTop) ? finalTop : currTop;
                        outer.style.top = currTop + 'px';

                        if (currTop < finalTop) {
                            requestAnimationFrame(fn);
                        }
                    }
                    requestAnimationFrame(fn);
                    window.addEventListener('resize', setTopOpenOuter);
                }

                function modalClose(event) {
                    if (mStatus && (!event.keyCode || event.keyCode === 27)) {
                        mStatus = false;

                        var start = new Date().getTime(),
                            startTop = outer.getBoundingClientRect().top,
                            finalTop = -outer.offsetHeight,
                            offset = outer.offsetHeight + (window.innerHeight - outer.offsetHeight) / 2;

                        var fn = function () {
                            var now = new Date().getTime() - start,
                                currTop = Math.round(startTop - offset * now / duration);

                            currTop = (currTop < finalTop) ? finalTop : currTop;
                            outer.style.top = currTop + 'px';

                            if (currTop > finalTop) {
                                requestAnimationFrame(fn);
                            } else {
                                overlay.classList.remove('fadeIn');
                                overlay.classList.add('fadeOut');
                                [].forEach.call(modals, function (modal) {
                                    modal.removeAttribute('style');
                                });
                            }
                        }
                        requestAnimationFrame(fn);
                        window.removeEventListener('resize', setTopOpenOuter);
                    }
                }

                function setTopOpenOuter() {
                    outer.style.top = (window.innerHeight - outer.offsetHeight) / 2 + 'px';
                }
            })();

        </script>*@
</body>


</html>
