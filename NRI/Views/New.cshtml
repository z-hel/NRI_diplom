@page
@{

}
<!DOCTYPE html>

<html lang="ru">
<head>
    <meta charset="utf-8" />
    <title>NRI</title>
    <link rel="stylesheet" href="css/main.css" />
    <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no" />
    <script src="https://code.jquery.com/jquery-2.2.4.min.js"></script>
    <style type="text/css">
        table {
            font-family: "Lucida Sans Unicode", "Lucida Grande", Sans-Serif;
            text-align: left;
            border-collapse: separate;
            border-spacing: 3px;
            background: #337ab7;
            /*color: #656665;*/
            /*color: rgb(162, 212, 255);*/
            /*border: 3px solid #337ab7;*/
            background-color: #337ab7;
            border-radius: 0.375em;
            box-shadow: inset 0 0 0 2px #337ab7;
            color: #337ab7 !important;
        }
        tr {
            background: #ffffff;
            border: 3px solid #337ab7;
        }

        th {
            font-size: 18px;
            padding: 10px;
        }

        td {
            background: #ffffff;
            padding: 10px;
        }

        INPUT {
            margin: 10px 10px 10px 0;
        }

        .table {
        }


    </style>
</head>


<body>
    <INPUT type="button" value="Добавить" data-modal="addModal" />
    <INPUT type="button" value="Редактировать" onclick="Edit()" />
    <INPUT type="button" value="Удалить" data-modal="deleteModal" />
    <div class="table">
        <table id="techOperationOutTable">
            <thead>
                <tr>
                    <th>Технологическая операция</th>
                    <th>Номенклатура выходного изделия</th>
                    <th>Количество</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>

    <div id="overlay" class="overlay fadeOut" data-close=""></div>
    <div class="modal-outer" style="top: -460px;">
        <span class="closer" data-close=""></span>
        <div id="addModal">
            <form name="techOperationOutForm">
                <input type="hidden" name="id" value="0" />
                <div class="form-group">
                    <label for="techOperation">Технологическая операция:</label>
                    <select name="to" id="selectTechOperation"></select>
                </div>
                <div class="form-group">
                    <label for="nomOut">Номенклатура выходного изделия:</label>
                    <select name="nomOut" id="selectNomOut"></select>
                </div>
                <div class="form-group">
                    <label for="count">Количество:</label>
                    <input class="form-control" name="count" id="count" />
                </div>
                <div class="panel-body">

                    <input type="button" value="Добавить" onclick="AddTechOperationOut()" />
                    <input type="button" value="Сбросить" onclick="reset()" />
                </div>
            </form>
        </div>


        <div id="editModal">
            <form name="techOperationOutEditForm">
                <input type="hidden" name="id" value="0" />
                <div class="form-group">
                    <label for="techOperation">Технологическая операция:</label>
                    <select name="to" id="selectTechOperation"></select>
                </div>
                <div class="form-group">
                    <label for="nomOut">Номенклатура выходного изделия:</label>
                    <select name="nomOut" id="selectNomOut"></select>
                </div>
                <div class="form-group">
                    <label for="count">Количество:</label>
                    <input class="form-control" name="count" id="count" />
                </div>
                <div class="panel-body">

                    <input type="button" value="Изменить" onclick="" /> 
                    @*TODO*@
                    <input type="button" value="Сбросить" onclick="reset()" />
                </div>
            </form>
        </div>
    </div>



    <script>

        function Edit() {
            //document.addEventListener('change', function () {
            //    var chk = event.target;

            //    if (chk.tagName === 'INPUT' && chk.type === 'checkbox') {
            //        alert(chk.name + " " + chk.value + " " + chk.checked);
            //    }
            //})

            //var selectedCheckbox;
            //$('input[type=checkbox]').each(function () {
            //    if ($(this).prop('checked')) {
            //        selectedCheckbox = $(this);
            //        $("#editModal").show();
            //    }
            //    else {
            //        return false;
            //    }
            //});
            //selectedCheckbox.style = "class";


            if ($("#cbx").prop("checked") != 'checked') {  // #agree - селектор чекбокса. Если не сработало замените prop на attr
                window.alert('Не выбрана ни одна запись');
                return false;
            }
            else {
                // Переход на страницу покупки
                $("#editModal").show();
            }
        }

        // сброс формы
        function reset() {
            var form = document.forms["techOperationOutForm"];
            form.reset();
            form.elements["id"].value = 0;
        }

        function GetTechOperations() {
            var select = document.getElementById('selectTechOperation');
            $.ajax({
                url: '/api/TechOperation',
                type: 'GET',
                contentType: "application/json",
                success: function (techOperations) {
                    $.each(techOperations, function (index, techOperation) {
                        var ooption = document.createElement('option');
                        ooption.value = techOperation.id;
                        ooption.innerText = techOperation.name
                        select.appendChild(ooption);

                        //document.getElementById('selectTechOperation').createElement('option').append(techOperation.name);
                    })
                },
                error: function (e) {
                    console.log(e.message);
                }
            });
        }
        function GetNomenclatures() {
            var select = document.getElementById('selectNomOut');
            $.ajax({
                url: '/api/Nomenclature',
                type: 'GET',
                contentType: "application/json",
                success: function (nomenclatures) {
                    $.each(nomenclatures, function (index, nomenclature) {
                        
                        var ooption = document.createElement('option');
                        ooption.value = nomenclature.id;
                        ooption.innerText = nomenclature.name
                        select.appendChild(ooption);
                    })
                },
                error: function (e) {
                    console.log(e.message);
                }
            });
        }
        

        function AddTechOperationOut() {
            var indexTOSelected = document.getElementById("selectTechOperation").options.selectedIndex;
            var techOperationId = document.getElementById("selectTechOperation").options[indexTOSelected].value;

            var indexNomOutSelected = document.getElementById("selectNomOut").options.selectedIndex;
            var nomOutId = document.getElementById("selectNomOut").options[indexNomOutSelected].value;

            var count = document.getElementById("count").value;
            if (count.match(/^[-\+]?\d+/) === null) { alert('Укажите корректное числовое значение параметра "Количество"'); }

            
            $.ajax({
                url: "api/TechOperationOut",
                contentType: "application/json",
                method: "POST",
                data: JSON.stringify({
                    techOperationId: techOperationId,
                    nomenclatureOutId: nomOutId,
                    count: count
                }),
                success: function (techOperationOut) {
                    reset();
                    alert('Запись успешно добавлена');
                    addRow('techOperationOutTable', techOperationOut);
                    //var table = document.getElementById('techOperationOutTable');
                    //$("table tbody").append(row(techOperationOut));
                }
            })
        }


        // Получение всех techOperationOut
        function GetTechOperationOuts() {
            $.ajax({
                url: '/api/TechOperationOut',
                type: 'GET',
                contentType: "application/json",
                success: function (techOperationOuts) {

                    //var rows = "";
                    $.each(techOperationOuts, function (index, techOperationOut) {
                        var transactionList = techOperationOut;
                        //var result = '';
                        //result = GetTechOperationName(techOperationOut.techOperationId) + GetNomenclatureOutName(techOperationOut.nomenclatureOutId) + techOperationOut.count;

                        addRow("techOperationOutTable", transactionList);
                        // добавляем полученные элементы в таблицу
                        //rows += row(techOperationOut);
                    })
                    //$("table tbody").append(rows);
                },
                error: function (e) {
                    console.log(e.message);
                }
            });
        }

        async function GetTechOperationName(id) {
            var name;
            var urlstr = '/api/TechOperation/' + id;
            await $.ajax({
                url: urlstr,
                type: 'GET',
                contentType: "application/json",
                success: function (techOperation) {
                    name = techOperation.name;
                },
                error: function (e) {
                    console.log(e.message);
                }
            });
            return name;
        }

        async function GetNomenclatureOutName(id) {
            var name;
            var urlstr = '/api/Nomenclature/' + id;
            await $.ajax({
                url: urlstr,
                type: 'GET',
                contentType: "application/json",
                success: function (nomenclatureOut) {
                    name = nomenclatureOut.name;
                },
                error: function (e) {
                    console.log(e.message);
                }
            });
            return name;
        }

        async function addRow(tableID, data) {

            var table = document.getElementById(tableID);

            var rowCount = table.rows.length;
            var row = table.insertRow(rowCount);

            var toId = data.techOperationId;
            var techOperationName = await GetTechOperationName(toId);

            var nomId = data.nomenclatureOutId;
            var nomenclatureOutName = await GetNomenclatureOutName(nomId);

            var cell1 = row.insertCell(0);
            cell1.innerText = techOperationName;

            var cell2 = row.insertCell(1);
            cell2.innerText = nomenclatureOutName;

            var cell3 = row.insertCell(2);
            cell3.innerText = data.count;

            var cell4 = row.insertCell(3);
            var el = document.createElement('label');
            el.innerHTML = '<input type="checkbox" id="cbx" style="display: none;"><label for="cbx" class="check"><svg width="18px" height="18px" viewBox="0 0 18 18"><path d="M1,9 L1,3.5 C1,2 2,1 3.5,1 L14.5,1 C16,1 17,2 17,3.5 L17,14.5 C17,16 16,17 14.5,17 L3.5,17 C2,17 1,16 1,14.5 L1,9 Z"></path><polyline points="1 9 7 14 15 4"></polyline></svg></label>';
            cell4.appendChild(el);
        }
        GetTechOperationOuts();
        GetTechOperations();
        GetNomenclatures();
    </script>

    <script>var typeAnimate = 'slide';</script>
    <script>
        ; (function () {
            var overlay = document.getElementById('overlay'),
                mOpen = document.querySelectorAll('[data-modal]'),
                mClose = document.querySelectorAll('[data-close]'),
                outer = document.querySelector('.modal-outer'),
                modals = document.querySelectorAll('.modal-outer > div'),
                duration = 400,
                mStatus = false,
                h = null;

            if (mOpen.length == 0) return;

            setTopOuter();

            function setTopOuter() {
                outer.style.top = -outer.offsetHeight + 'px';
            }

            [].forEach.call(mOpen, function (el) {
                el.addEventListener('click', function (e) {
                    var modalId = el.getAttribute('data-modal'),
                        modal = document.getElementById(modalId);
                    modalShow(modal);
                });
            });

            [].forEach.call(mClose, function (el) {
                el.addEventListener('click', modalClose);
            });

            document.addEventListener('keydown', modalClose);

            function modalShow(modal) {
                mStatus = true;
                overlay.classList.remove('fadeOut');
                overlay.classList.add('fadeIn');
                modal.style.display = 'block';

                var start = new Date().getTime(),
                    startTop = outer.getBoundingClientRect().top,
                    finalTop = (window.innerHeight - outer.offsetHeight) / 2,
                    offset = outer.offsetHeight + finalTop;

                var fn = function () {
                    var now = new Date().getTime() - start,
                        currTop = Math.round(startTop + offset * now / duration);

                    currTop = (currTop > finalTop) ? finalTop : currTop;
                    outer.style.top = currTop + 'px';

                    if (currTop < finalTop) {
                        requestAnimationFrame(fn);
                    }
                }
                requestAnimationFrame(fn);
                window.addEventListener('resize', setTopOpenOuter);
            }

            function modalClose(event) {
                if (mStatus && (!event.keyCode || event.keyCode === 27)) {
                    mStatus = false;

                    var start = new Date().getTime(),
                        startTop = outer.getBoundingClientRect().top,
                        finalTop = -outer.offsetHeight,
                        offset = outer.offsetHeight + (window.innerHeight - outer.offsetHeight) / 2;

                    var fn = function () {
                        var now = new Date().getTime() - start,
                            currTop = Math.round(startTop - offset * now / duration);

                        currTop = (currTop < finalTop) ? finalTop : currTop;
                        outer.style.top = currTop + 'px';

                        if (currTop > finalTop) {
                            requestAnimationFrame(fn);
                        } else {
                            overlay.classList.remove('fadeIn');
                            overlay.classList.add('fadeOut');
                            [].forEach.call(modals, function (modal) {
                                modal.removeAttribute('style');
                            });
                        }
                    }
                    requestAnimationFrame(fn);
                    window.removeEventListener('resize', setTopOpenOuter);
                }
            }

            function setTopOpenOuter() {
                outer.style.top = (window.innerHeight - outer.offsetHeight) / 2 + 'px';
            }
        })();

    </script>
</body>


</html>
